directory_fail2ban_config: /etc/fail2ban
install_fail2ban: false
fail2ban_user: root
fail2ban_group: root
fail2ban_filemode: '600'
fail2ban_ignore_ip: ''
fail2ban_configuration: []
# fail2ban_backend: # Optional, string, configr setting for logging backend
# firewall_type: # Mandatory. iptables


# Full conf
fail2ban:
#   # version: 0.11.2
#   # package_sha256: 44fe3d67e7d24bba4fc81ee672059dcb67980258db6101bcd8740736a9d9110f
  log_paths: []
#     # list of dictionary of valid fail2ban log file paths

#  filter: []
# #     - name: keycloak
# #       entries:
# #         # dictionary of valid fail2ban filters

  config: []
#     - name: sshd
#       sub_path: jail.d
#       sections:
  #       DEFAULT: {}  # optional
  #         # - entry:
  #         #   value:
#         sshd:
#           name: sshd
#           enabled: 'true'
#           backend: systemdkubernetes_firewall
#           chain: INPUT
#           port: ssh
#           # logpath = %(sshd_log_localhost)s
#           filter: sshd[mode=aggressive]
#           maxretry: 3kubernetes_firewall


nfc_firewall:
  # before `configure_ipv6` can be enabled. Thee address' need to be checked for
  # IP Version type. This'll allow adding IPv4 and IPv6 Address' to the correct table.
  configure_ipv6: false 
  enabled:
    http: true
    https: true
    kubernetes: true     # ----------------ToDo:--------------- check to ensure `nfc_firewall_enabled_kubernetes` is used as this is the var passed
                         # and takes precedence over this var
    oracle_cloud: true
    sshd: true

  # rules:            # Mandatory, dict. if none use `[]`
  #   - protocol:     # Both, string. N/A for chain, Required if using table.
  #     source:
  #       host:       # Both, string. Required if using chain, Optional if using table.
  #       port:
  #     dest:         # Optional, dict. ignored if using chain. use either `host` or `port` or both
  #       host:       # '', string.
  #       port:       # '', string.
  #     policy:       # Mandatory, Choice ACCEPT, DROP, REJECT {chain_name} etc
  #     state:        # Optional. NEW, RELATED, ESTABLISHED etc
  #     notify:       # Optional, String. Name of the handler to run on change.



  chains_rules:   # When defining access rules, dont add the creation of chains. this is to be done with variable `nfc_firewall_rules_default_custom`.
                  # use var `nfc_firewall_rules_access` for access rules that will be reloaded
    - name:
      comment:
      chain: true # Optional, Boolean. only if the rule is a chain, set this ti true. enforces `-j {chain-name}`
      protocol:
      source:
        host:
        port:
      dest:
        host:
        port:
      policy:   # is this needed??????
      state:        # Optional. NEW, RELATED, ESTABLISHED etc defaults to new as related and established rule will allow.
      table:        # Mandatory, String. Name of the table to add chain jump rule.
      notify:       # Optional, String. Name of the handler to run on change.

    # examples
    - name: sshd
      comment: SSH server Access
      protocol: tcp
      dest:
        port: 22

    - name: kubernetes-embedded-etcd
      protocol: tcp
      dest:
        port:
          - '2379'
          - '2380'
      comment: etcd. Servers only

    - name: kubernetes-api
      protocol: tcp
      dest:
        port: '6443'
      comment: Kubernetes API access. All Cluster hosts and end users



http_rules:
  - protocol: tcp
    table: INPUT
    comment: Web Server Access
    dest:
      port: 80
    policy: ACCEPT


https_rules:
  - protocol: tcp
    table: INPUT
    comment: TLS Web Server Access
    dest:
      port: 443
    policy: ACCEPT

# Why?? if fail2ban table is deleted, it's not recreated when banned


kubernetes_chains:

    - name: kubernetes-embedded-etcd
      chain: true
      table: INPUT
      protocol: tcp
      dest:
        port:
          - '2379'
          - '2380'
      comment: etcd. Servers only

    - name: kubernetes-api
      chain: true
      table: INPUT
      protocol: tcp
      dest:
        port: '6443'
      comment: Kubernetes API access. All Cluster hosts and end users

    - name: kubernetes-flannel-vxlan
      chain: true
      table: INPUT
      protocol: udp
      dest:
        port: '8472'
      comment: Flannel. All cluster hosts

    - name: kubernetes-kubelet-metrics
      chain: true
      table: INPUT
      protocol: tcp
      dest:
        port: '10250'
      comment: Kubernetes Metrics. All cluster hosts

    - name: kubernetes-flannel-wg-four
      chain: true
      table: INPUT
      protocol: udp
      dest:
        port: '51820'
      comment: Flannel Wiregaurd IPv4. All cluster hosts

    - name: kubernetes-flannel-wg-six
      chain: true
      table: INPUT
      protocol: udp
      dest:
        port: '51821'
      comment: Flannel Wiregaurd IPv6. All cluster hosts

oracle_cloud_rules:
  - name: InstanceServices
    chain: true
    table: OUTPUT
    dest:
      host: 169.254.0.0/16

# ToDo: Add these rules
# -A InstanceServices -d 169.254.0.2/32 -p tcp -m owner --uid-owner 0 -m tcp --dport 3260 -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j ACCEPT
# -A InstanceServices -d 169.254.2.0/24 -p tcp -m owner --uid-owner 0 -m tcp --dport 3260 -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j ACCEPT
# -A InstanceServices -d 169.254.4.0/24 -p tcp -m owner --uid-owner 0 -m tcp --dport 3260 -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j ACCEPT
# -A InstanceServices -d 169.254.5.0/24 -p tcp -m owner --uid-owner 0 -m tcp --dport 3260 -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j ACCEPT
# -A InstanceServices -d 169.254.0.2/32 -p tcp -m tcp --dport 80 -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j ACCEPT
# -A InstanceServices -d 169.254.169.254/32 -p udp -m udp --dport 53 -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j ACCEPT
# -A InstanceServices -d 169.254.169.254/32 -p tcp -m tcp --dport 53 -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j ACCEPT
# -A InstanceServices -d 169.254.0.3/32 -p tcp -m owner --uid-owner 0 -m tcp --dport 80 -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j ACCEPT
# -A InstanceServices -d 169.254.0.4/32 -p tcp -m tcp --dport 80 -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j ACCEPT
# -A InstanceServices -d 169.254.169.254/32 -p tcp -m tcp --dport 80 -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j ACCEPT
# -A InstanceServices -d 169.254.169.254/32 -p udp -m udp --dport 67 -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j ACCEPT
# -A InstanceServices -d 169.254.169.254/32 -p udp -m udp --dport 69 -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j ACCEPT
# -A InstanceServices -d 169.254.169.254/32 -p udp --dport 123 -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j ACCEPT
# -A InstanceServices -d 169.254.0.0/16 -p tcp -m tcp -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j REJECT --reject-with tcp-reset
# -A InstanceServices -d 169.254.0.0/16 -p udp -m udp -m comment --comment "See the Oracle-Provided Images section in the Oracle Cloud Infrastructure documentation for security impact of modifying or removing this rule" -j REJECT --reject-with icmp-port-unreachable




#-A OUTPUT -d 169.254.0.0/16 -j InstanceServices # Last rule

sshd_chains:
  - name: sshd
    chain: true
    table: INPUT
    comment: SSH server Access
    protocol: tcp
    dest:
      port: 22


# Above to be used to create a variable only available during play that enables 
# every group and/or role to add to before the firewall rules are applied.
# i.e.
# each chain/rule to be added as dict not array, so that duplicates can be filtered out.
# rules to be applied by handler at the end of the play.
# nfc_firewall_rules_found:
#   chain:
#     hash_of_dict_chain:
#       dict_values_of_chain_here:
#   rules:
#     hash_of_dict_rule:
#       dict_values_of_rule_here: